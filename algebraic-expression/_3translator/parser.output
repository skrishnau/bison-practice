Terminals unused in grammar

   TOKEN_ERROR


Grammar

    0 $accept: input $end

    1 input: exp TOKEN_SEMI

    2 exp: exp TOKEN_PLUS term
    3    | exp TOKEN_MINUS term
    4    | term

    5 term: term TOKEN_MUL factor
    6     | term TOKEN_DIV factor
    7     | factor

    8 factor: TOKEN_MINUS factor
    9       | TOKEN_LPAREN exp TOKEN_RPAREN
   10       | TOKEN_ABS factor
   11       | TOKEN_INT


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_INT (258) 11
TOKEN_PLUS (259) 2
TOKEN_MINUS (260) 3 8
TOKEN_MUL (261) 5
TOKEN_DIV (262) 6
TOKEN_LPAREN (263) 9
TOKEN_RPAREN (264) 9
TOKEN_ABS (265) 10
TOKEN_SEMI (266) 1
TOKEN_ERROR (267)


Nonterminals, with rules where they appear

$accept (13)
    on left: 0
input (14)
    on left: 1, on right: 0
exp (15)
    on left: 2 3 4, on right: 1 2 3 9
term (16)
    on left: 5 6 7, on right: 2 3 4 5 6
factor (17)
    on left: 8 9 10 11, on right: 5 6 7 8 10


state 0

    0 $accept: . input $end

    TOKEN_INT     shift, and go to state 1
    TOKEN_MINUS   shift, and go to state 2
    TOKEN_LPAREN  shift, and go to state 3
    TOKEN_ABS     shift, and go to state 4

    input   go to state 5
    exp     go to state 6
    term    go to state 7
    factor  go to state 8


state 1

   11 factor: TOKEN_INT .

    $default  reduce using rule 11 (factor)


state 2

    8 factor: TOKEN_MINUS . factor

    TOKEN_INT     shift, and go to state 1
    TOKEN_MINUS   shift, and go to state 2
    TOKEN_LPAREN  shift, and go to state 3
    TOKEN_ABS     shift, and go to state 4

    factor  go to state 9


state 3

    9 factor: TOKEN_LPAREN . exp TOKEN_RPAREN

    TOKEN_INT     shift, and go to state 1
    TOKEN_MINUS   shift, and go to state 2
    TOKEN_LPAREN  shift, and go to state 3
    TOKEN_ABS     shift, and go to state 4

    exp     go to state 10
    term    go to state 7
    factor  go to state 8


state 4

   10 factor: TOKEN_ABS . factor

    TOKEN_INT     shift, and go to state 1
    TOKEN_MINUS   shift, and go to state 2
    TOKEN_LPAREN  shift, and go to state 3
    TOKEN_ABS     shift, and go to state 4

    factor  go to state 11


state 5

    0 $accept: input . $end

    $end  shift, and go to state 12


state 6

    1 input: exp . TOKEN_SEMI
    2 exp: exp . TOKEN_PLUS term
    3    | exp . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 13
    TOKEN_MINUS  shift, and go to state 14
    TOKEN_SEMI   shift, and go to state 15


state 7

    4 exp: term .
    5 term: term . TOKEN_MUL factor
    6     | term . TOKEN_DIV factor

    TOKEN_MUL  shift, and go to state 16
    TOKEN_DIV  shift, and go to state 17

    $default  reduce using rule 4 (exp)


state 8

    7 term: factor .

    $default  reduce using rule 7 (term)


state 9

    8 factor: TOKEN_MINUS factor .

    $default  reduce using rule 8 (factor)


state 10

    2 exp: exp . TOKEN_PLUS term
    3    | exp . TOKEN_MINUS term
    9 factor: TOKEN_LPAREN exp . TOKEN_RPAREN

    TOKEN_PLUS    shift, and go to state 13
    TOKEN_MINUS   shift, and go to state 14
    TOKEN_RPAREN  shift, and go to state 18


state 11

   10 factor: TOKEN_ABS factor .

    $default  reduce using rule 10 (factor)


state 12

    0 $accept: input $end .

    $default  accept


state 13

    2 exp: exp TOKEN_PLUS . term

    TOKEN_INT     shift, and go to state 1
    TOKEN_MINUS   shift, and go to state 2
    TOKEN_LPAREN  shift, and go to state 3
    TOKEN_ABS     shift, and go to state 4

    term    go to state 19
    factor  go to state 8


state 14

    3 exp: exp TOKEN_MINUS . term

    TOKEN_INT     shift, and go to state 1
    TOKEN_MINUS   shift, and go to state 2
    TOKEN_LPAREN  shift, and go to state 3
    TOKEN_ABS     shift, and go to state 4

    term    go to state 20
    factor  go to state 8


state 15

    1 input: exp TOKEN_SEMI .

    $default  reduce using rule 1 (input)


state 16

    5 term: term TOKEN_MUL . factor

    TOKEN_INT     shift, and go to state 1
    TOKEN_MINUS   shift, and go to state 2
    TOKEN_LPAREN  shift, and go to state 3
    TOKEN_ABS     shift, and go to state 4

    factor  go to state 21


state 17

    6 term: term TOKEN_DIV . factor

    TOKEN_INT     shift, and go to state 1
    TOKEN_MINUS   shift, and go to state 2
    TOKEN_LPAREN  shift, and go to state 3
    TOKEN_ABS     shift, and go to state 4

    factor  go to state 22


state 18

    9 factor: TOKEN_LPAREN exp TOKEN_RPAREN .

    $default  reduce using rule 9 (factor)


state 19

    2 exp: exp TOKEN_PLUS term .
    5 term: term . TOKEN_MUL factor
    6     | term . TOKEN_DIV factor

    TOKEN_MUL  shift, and go to state 16
    TOKEN_DIV  shift, and go to state 17

    $default  reduce using rule 2 (exp)


state 20

    3 exp: exp TOKEN_MINUS term .
    5 term: term . TOKEN_MUL factor
    6     | term . TOKEN_DIV factor

    TOKEN_MUL  shift, and go to state 16
    TOKEN_DIV  shift, and go to state 17

    $default  reduce using rule 3 (exp)


state 21

    5 term: term TOKEN_MUL factor .

    $default  reduce using rule 5 (term)


state 22

    6 term: term TOKEN_DIV factor .

    $default  reduce using rule 6 (term)
